Index: app/src/main/java/my/edu/tarc/hungerhub/MainMenuFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package my.edu.tarc.hungerhub\r\n\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.net.Uri\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport androidx.fragment.app.Fragment\r\nimport androidx.navigation.fragment.findNavController\r\nimport com.google.firebase.database.DataSnapshot\r\nimport com.google.firebase.database.DatabaseError\r\nimport com.google.firebase.database.FirebaseDatabase\r\nimport com.google.firebase.database.ValueEventListener\r\nimport my.edu.tarc.hungerhub.databinding.FragmentMainMenuBinding\r\n\r\nclass MainMenuFragment: Fragment()  {\r\n    private var _binding: FragmentMainMenuBinding? = null\r\n    private val binding get() = _binding!!\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater,\r\n        container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View {\r\n        _binding = FragmentMainMenuBinding.inflate(inflater, container, false)\r\n\r\n        return binding.root\r\n    }\r\n\r\n    override fun onStart() {\r\n        super.onStart()\r\n\r\n        readLoginData()\r\n\r\n        binding.imageButtonDonate.setOnClickListener{\r\n            findNavController().navigate(R.id.action_mainMenuFragment_to_nav_donation)\r\n        }\r\n        binding.textViewDonateMainMenu.setOnClickListener {\r\n            findNavController().navigate(R.id.action_mainMenuFragment_to_nav_donation)\r\n        }\r\n\r\n        binding.imageButtonRequest.setOnClickListener{\r\n            findNavController().navigate(R.id.action_mainMenuFragment_to_nav_request)\r\n        }\r\n        binding.textViewRequestMainMenu.setOnClickListener {\r\n            findNavController().navigate(R.id.action_mainMenuFragment_to_nav_request)\r\n        }\r\n\r\n        binding.imageButtonSurvey.setOnClickListener {\r\n            findNavController().navigate(R.id.action_mainMenuFragment_to_nav_survey)\r\n        }\r\n        binding.textViewSurveyMainMenu.setOnClickListener {\r\n            findNavController().navigate(R.id.action_mainMenuFragment_to_nav_survey)\r\n        }\r\n\r\n        binding.imageButtonInfo.setOnClickListener {\r\n            val intent = Intent(Intent.ACTION_VIEW)\r\n            intent.data = Uri.parse(\"https://nutritionfacts.org/\")\r\n            startActivity(intent)\r\n        }\r\n        binding.textViewMoreInfo.setOnClickListener {\r\n            val intent = Intent(Intent.ACTION_VIEW)\r\n            intent.data = Uri.parse(\"https://nutritionfacts.org/\")\r\n            startActivity(intent)\r\n        }\r\n    }\r\n\r\n    private fun readLoginData() {\r\n        val referenceUser = FirebaseDatabase.getInstance().getReference(getString(R.string.firebase_user))\r\n\r\n        val sharedPref = activity?.getSharedPreferences(\"Login\", Context.MODE_PRIVATE)\r\n        val loginIc = sharedPref?.getString(\"ic\", null)\r\n        val findUser = referenceUser.orderByChild(\"ic\").equalTo(loginIc)\r\n\r\n        findUser.addListenerForSingleValueEvent(object: ValueEventListener {\r\n            override fun onDataChange(dataSnapshot: DataSnapshot) {\r\n                if (dataSnapshot.exists() && loginIc != null) {\r\n                    val children = loginIc.let { it1 -> dataSnapshot.child(it1) }\r\n                    val name = children.child(\"name\").value.toString()\r\n                    val email = children.child(\"email\").value.toString()\r\n                    val phoneNo = children.child(\"phoneNo\").value.toString()\r\n\r\n                    with(sharedPref.edit()) {\r\n                        this?.putString(\"name\", name)\r\n                        this?.putString(\"email\", email)\r\n                        this?.putString(\"phone\", phoneNo)\r\n                        this?.apply()\r\n                    }\r\n                }\r\n            }\r\n            override fun onCancelled(databaseError: DatabaseError) {\r\n                Log.e(\"firebase\", \"firebase error\")\r\n            }\r\n        })\r\n    }\r\n\r\n    override fun onDestroyView() {\r\n        super.onDestroyView()\r\n        _binding = null\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/hungerhub/MainMenuFragment.kt b/app/src/main/java/my/edu/tarc/hungerhub/MainMenuFragment.kt
--- a/app/src/main/java/my/edu/tarc/hungerhub/MainMenuFragment.kt	(revision 5e8be5b3fea268a74267b29db397dce7ecbf23b7)
+++ b/app/src/main/java/my/edu/tarc/hungerhub/MainMenuFragment.kt	(date 1672855133285)
@@ -8,8 +8,10 @@
 import android.view.LayoutInflater
 import android.view.View
 import android.view.ViewGroup
+import android.widget.TextView
 import androidx.fragment.app.Fragment
 import androidx.navigation.fragment.findNavController
+import com.google.android.material.navigation.NavigationView
 import com.google.firebase.database.DataSnapshot
 import com.google.firebase.database.DatabaseError
 import com.google.firebase.database.FirebaseDatabase
Index: app/src/main/java/my/edu/tarc/hungerhub/ui/survey/fragment_survey_ques1.kt
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/hungerhub/ui/survey/fragment_survey_ques1.kt b/app/src/main/java/my/edu/tarc/hungerhub/ui/survey/fragment_survey_ques1.kt
deleted file mode 100644
--- a/app/src/main/java/my/edu/tarc/hungerhub/ui/survey/fragment_survey_ques1.kt	(revision 5e8be5b3fea268a74267b29db397dce7ecbf23b7)
+++ /dev/null	(revision 5e8be5b3fea268a74267b29db397dce7ecbf23b7)
@@ -1,168 +0,0 @@
-package my.edu.tarc.hungerhub.ui.survey
-
-import android.app.AlertDialog
-import android.content.Context
-import android.os.Bundle
-import android.util.Log
-import androidx.fragment.app.Fragment
-import android.view.LayoutInflater
-import android.view.View
-import android.view.ViewGroup
-import android.widget.RadioGroup
-import androidx.navigation.fragment.findNavController
-import com.google.firebase.auth.FirebaseAuth
-import com.google.firebase.auth.FirebaseUser
-import com.google.firebase.database.DataSnapshot
-import com.google.firebase.database.DatabaseError
-import com.google.firebase.database.FirebaseDatabase
-import com.google.firebase.database.ValueEventListener
-import my.edu.tarc.hungerhub.R
-import my.edu.tarc.hungerhub.databinding.FragmentSurveyQues1Binding
-import my.edu.tarc.hungerhub.databinding.FragmentSurveyQuesBinding
-
-class fragment_survey_ques1 : Fragment() {
-    private var _binding: FragmentSurveyQues1Binding? = null
-    private val binding get() = _binding!!
-
-    var database = FirebaseDatabase.getInstance().reference
-
-    override fun onCreateView(
-        inflater: LayoutInflater,
-        container: ViewGroup?,
-        savedInstanceState: Bundle?
-    ): View? {
-        _binding = FragmentSurveyQues1Binding.inflate(inflater, container, false)
-        return binding.root
-    }
-
-    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
-        super.onViewCreated(view, savedInstanceState)
-
-        var index = 0
-        val arrQuestion = arrayOf<String>(
-            "Is your family income able to cover daily food expenses",
-            "Do you think the food price in your area is reasonable/affordable?"
-        )
-        val arrAnswerA = arrayOf("Yes", "Yes")
-        val arrAnswerB = arrayOf("No", "No")
-
-        binding.textViewQues1.text = String.format(arrQuestion.get(index))
-        binding.radioButtonQQ1.text = String.format(arrAnswerA.get(index))
-        binding.radioButtonQQ2.text = String.format(arrAnswerB.get(index))
-
-        val referenceUser = FirebaseDatabase.getInstance().getReference(getString(R.string.firebase_user))
-
-        val sharedPref = activity?.getSharedPreferences("Login", Context.MODE_PRIVATE)
-        val loginIc = sharedPref?.getString("ic", null)
-        val findUser = referenceUser.orderByChild("ic").equalTo(loginIc)
-
-        findUser.addListenerForSingleValueEvent(object: ValueEventListener {
-            override fun onDataChange(dataSnapshot: DataSnapshot) {
-                if (dataSnapshot.exists() && loginIc != null) {
-                    Log.d("checkpoint", "got snapshot")
-                    val children = loginIc.let { it1 -> dataSnapshot.child(it1) }
-                    val name = children.child("name").value.toString()
-                    val ic = children.child("ic").value.toString()
-                    val email = children.child("email").value.toString()
-                    val phoneNo = children.child("phoneNo").value.toString()
-                    val address = children.child("address").value.toString()
-                    val postcode = children.child("posCode").value.toString()
-                    val state = children.child("state").value.toString()
-                }
-            }
-
-            override fun onCancelled(error: DatabaseError) {
-
-            }
-        })
-
-        if (index == 0) {
-            binding.radioGroupQues2.setOnCheckedChangeListener(RadioGroup.OnCheckedChangeListener { group, checkedId ->
-                val selectedOption = when (checkedId) {
-                    R.id.radioButtonQQ1 -> "Yes"
-                    R.id.radioButtonQQ2 -> "No"
-                    else -> ""
-                }
-
-
-                // Store the selected option in the Firebase Realtime Database
-                database.child("User").child(loginIc.toString()).child("survey").child("FamilyIncomeAbleToCoverDailyFoodExpenses").setValue(selectedOption)
-                //dataRef.setValue(selectedOption)
-
-            })
-            index++
-
-        }
-        binding.buttonNextSurvey.setOnClickListener {
-            val member1 = binding.radioButtonQQ1.isChecked
-            val member2 = binding.radioButtonQQ2.isChecked
-
-            if((!member1)&&(!member2)){
-                // Show error message using alert dialog
-                val errorMessage = getString(R.string.value_required)
-                val builder = AlertDialog.Builder(requireActivity())
-                builder.setTitle("Error")
-                    .setMessage(errorMessage)
-                    .setPositiveButton("OK", null)
-                val alertDialog = builder.create()
-                alertDialog.show()
-
-                return@setOnClickListener
-            }
-            if (index <= arrQuestion.size - 1) {
-                binding.textViewQues1.text = String.format(arrQuestion.get(index))
-                binding.radioButtonQQ1.text = String.format(arrAnswerA.get(index))
-                binding.radioButtonQQ2.text = String.format(arrAnswerB.get(index))
-                check(index)
-                index++
-            } else {
-                findNavController().navigate(R.id.action_fragment_survey_ques1_to_surveyFragmentRate1)
-            }
-        }
-    }
-
-    private fun check(index: Int) {
-
-        val referenceUser = FirebaseDatabase.getInstance().getReference(getString(R.string.firebase_user))
-
-        val sharedPref = activity?.getSharedPreferences("Login", Context.MODE_PRIVATE)
-        val loginIc = sharedPref?.getString("ic", null)
-        val findUser = referenceUser.orderByChild("ic").equalTo(loginIc)
-
-        findUser.addListenerForSingleValueEvent(object: ValueEventListener {
-            override fun onDataChange(dataSnapshot: DataSnapshot) {
-                if (dataSnapshot.exists() && loginIc != null) {
-                    Log.d("checkpoint", "got snapshot")
-                    val children = loginIc.let { it1 -> dataSnapshot.child(it1) }
-                    val name = children.child("name").value.toString()
-                    val ic = children.child("ic").value.toString()
-                    val email = children.child("email").value.toString()
-                    val phoneNo = children.child("phoneNo").value.toString()
-                    val address = children.child("address").value.toString()
-                    val postcode = children.child("posCode").value.toString()
-                    val state = children.child("state").value.toString()
-                }
-            }
-
-            override fun onCancelled(error: DatabaseError) {
-
-            }
-        })
-
-        if (index == 1) {
-            binding.radioGroupQues2.setOnCheckedChangeListener(RadioGroup.OnCheckedChangeListener { group, checkedId ->
-                val selectedOption = when (checkedId) {
-                    R.id.radioButtonQQ1 -> "Yes"
-                    R.id.radioButtonQQ2 -> "No"
-                    else -> ""
-                }
-
-                // Store the selected option in the Firebase Realtime Database
-                database.child("User").child(loginIc.toString()).child("survey").child("FoodPriceReasonable").setValue(selectedOption)
-                //dataRef.setValue(selectedOption)
-
-            })
-            binding.radioGroupQues2.clearCheck()
-        }
-    }
-}
\ No newline at end of file
Index: app/src/main/java/my/edu/tarc/hungerhub/ui/survey/Fragment_survey_ques.kt
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/hungerhub/ui/survey/Fragment_survey_ques.kt b/app/src/main/java/my/edu/tarc/hungerhub/ui/survey/Fragment_survey_ques.kt
deleted file mode 100644
--- a/app/src/main/java/my/edu/tarc/hungerhub/ui/survey/Fragment_survey_ques.kt	(revision 5e8be5b3fea268a74267b29db397dce7ecbf23b7)
+++ /dev/null	(revision 5e8be5b3fea268a74267b29db397dce7ecbf23b7)
@@ -1,205 +0,0 @@
-package my.edu.tarc.hungerhub.ui.survey
-
-import android.app.AlertDialog
-import android.content.Context
-import android.os.Bundle
-import android.util.Log
-import androidx.fragment.app.Fragment
-import android.view.LayoutInflater
-import android.view.View
-import android.view.ViewGroup
-import android.widget.RadioGroup
-import androidx.navigation.fragment.findNavController
-import com.google.firebase.auth.FirebaseAuth
-import com.google.firebase.auth.FirebaseUser
-import com.google.firebase.database.DataSnapshot
-import com.google.firebase.database.DatabaseError
-import com.google.firebase.database.FirebaseDatabase
-import com.google.firebase.database.ValueEventListener
-import my.edu.tarc.hungerhub.R
-import my.edu.tarc.hungerhub.databinding.FragmentSurveyBinding
-import my.edu.tarc.hungerhub.databinding.FragmentSurveyQuesBinding
-
-class fragment_survey_ques : Fragment() {
-
-    private var _binding: FragmentSurveyQuesBinding? = null
-    private val binding get() = _binding!!
-
-    var database = FirebaseDatabase.getInstance().reference
-
-    override fun onCreateView(
-        inflater: LayoutInflater,
-        container: ViewGroup?,
-        savedInstanceState: Bundle?
-    ): View? {
-        _binding = FragmentSurveyQuesBinding.inflate(inflater, container, false)
-        return binding.root
-    }
-
-    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
-        super.onViewCreated(view, savedInstanceState)
-        var index = 0
-        val arrQuestion = arrayOf<String>(
-            "How many members are there in your household",
-            "How many members are working currently in your household",
-            "How many meals do you and your family consume daily"
-        )
-        val arrAnswerA = arrayOf("1-3", "1-3", "1")
-        val arrAnswerB = arrayOf("4-6", "4-6", "2")
-        val arrAnswerC = arrayOf("7-9", "7-9", "3")
-        val arrAnswerD = arrayOf("10 or above", "10 or above", "4 or above")
-
-        binding.textViewQues.text = String.format(arrQuestion.get(index))
-        binding.radioButtonQ1.text = String.format(arrAnswerA.get(index))
-        binding.radioButtonQ2.text = String.format(arrAnswerB.get(index))
-        binding.radioButtonQ3.text = String.format(arrAnswerC.get(index))
-        binding.radioButtonQ4.text = String.format(arrAnswerD.get(index))
-
-        val referenceUser = FirebaseDatabase.getInstance().getReference(getString(R.string.firebase_user))
-
-        val sharedPref = activity?.getSharedPreferences("Login", Context.MODE_PRIVATE)
-        val loginIc = sharedPref?.getString("ic", null)
-        val findUser = referenceUser.orderByChild("ic").equalTo(loginIc)
-
-        findUser.addListenerForSingleValueEvent(object: ValueEventListener {
-            override fun onDataChange(dataSnapshot: DataSnapshot) {
-                if (dataSnapshot.exists() && loginIc != null) {
-                    Log.d("checkpoint", "got snapshot")
-                    val children = loginIc.let { it1 -> dataSnapshot.child(it1) }
-                    val name = children.child("name").value.toString()
-                    val ic = children.child("ic").value.toString()
-                    val email = children.child("email").value.toString()
-                    val phoneNo = children.child("phoneNo").value.toString()
-                    val address = children.child("address").value.toString()
-                    val postcode = children.child("posCode").value.toString()
-                    val state = children.child("state").value.toString()
-                }
-            }
-
-            override fun onCancelled(error: DatabaseError) {
-
-            }
-        })
-        if(index==0) {
-            binding.radioGroupTest.setOnCheckedChangeListener(RadioGroup.OnCheckedChangeListener { group, checkedId ->
-                val selectedOption = when (checkedId) {
-                R.id.radioButtonQ1 -> "1-3"
-                R.id.radioButtonQ2 -> "4-6"
-                R.id.radioButtonQ3 -> "7-9"
-                R.id.radioButtonQ4 -> "10 or above"
-                else -> ""
-            }
-
-            // Store the selected option in the Firebase Realtime Database
-                database.child("User").child(loginIc.toString()).child("survey").child("NumMemberInHouse").setValue(selectedOption)
-            //dataRef.setValue(selectedOption)
-
-        })
-        index++
-        }
-
-        binding.buttonNextQues.setOnClickListener {
-            val member1 = binding.radioButtonQ1.isChecked
-            val member2 = binding.radioButtonQ2.isChecked
-            val member3 = binding.radioButtonQ3.isChecked
-            val member4 = binding.radioButtonQ4.isChecked
-
-            if((!member1)&&(!member2)&&(!member3)&&(!member4)){
-                // Show error message using alert dialog
-                val errorMessage = getString(R.string.value_required)
-                val builder = AlertDialog.Builder(requireActivity())
-                builder.setTitle("Error")
-                    .setMessage(errorMessage)
-                    .setPositiveButton("OK", null)
-                val alertDialog = builder.create()
-                alertDialog.show()
-
-                return@setOnClickListener
-            }
-            //binding.radioGroupTest.clearCheck()
-            if (index<=arrQuestion.size-1) {
-
-                binding.textViewQues.text = String.format(arrQuestion.get(index))
-                binding.radioButtonQ1.text = String.format(arrAnswerA.get(index))
-                binding.radioButtonQ2.text = String.format(arrAnswerB.get(index))
-                binding.radioButtonQ3.text = String.format(arrAnswerC.get(index))
-                binding.radioButtonQ4.text = String.format(arrAnswerD.get(index))
-                check(index)
-                index++
-
-            }
-
-            else{
-                findNavController().navigate(R.id.action_fragment_survey_ques_to_fragment_survey_ques1)
-
-            }
-        }
-    }
-
-    private fun check(index: Int) {
-
-        val referenceUser = FirebaseDatabase.getInstance().getReference(getString(R.string.firebase_user))
-
-        val sharedPref = activity?.getSharedPreferences("Login", Context.MODE_PRIVATE)
-        val loginIc = sharedPref?.getString("ic", null)
-        val findUser = referenceUser.orderByChild("ic").equalTo(loginIc)
-
-        findUser.addListenerForSingleValueEvent(object: ValueEventListener {
-            override fun onDataChange(dataSnapshot: DataSnapshot) {
-                if (dataSnapshot.exists() && loginIc != null) {
-                    Log.d("checkpoint", "got snapshot")
-                    val children = loginIc.let { it1 -> dataSnapshot.child(it1) }
-                    val name = children.child("name").value.toString()
-                    val ic = children.child("ic").value.toString()
-                    val email = children.child("email").value.toString()
-                    val phoneNo = children.child("phoneNo").value.toString()
-                    val address = children.child("address").value.toString()
-                    val postcode = children.child("posCode").value.toString()
-                    val state = children.child("state").value.toString()
-                }
-            }
-
-            override fun onCancelled(error: DatabaseError) {
-
-            }
-        })
-
-        when (index) {
-            1 -> {
-                binding.radioGroupTest.setOnCheckedChangeListener(RadioGroup.OnCheckedChangeListener { group, checkedId ->
-                    val selectedOption = when (checkedId) {
-                        R.id.radioButtonQ1 -> "1-3"
-                        R.id.radioButtonQ2 -> "4-6"
-                        R.id.radioButtonQ3 -> "7-9"
-                        R.id.radioButtonQ4 -> "10 or above"
-                        else -> ""
-                    }
-
-                    // Store the selected option in the Firebase Realtime Database
-                    database.child("User").child(loginIc.toString()).child("survey").child("MembersWorking").setValue(selectedOption)
-
-                })
-
-                binding.radioGroupTest.clearCheck()
-            }
-            2 -> {
-                binding.radioGroupTest.setOnCheckedChangeListener(RadioGroup.OnCheckedChangeListener { group, checkedId ->
-                    val selectedOption = when (checkedId) {
-                        R.id.radioButtonQ1 -> "1"
-                        R.id.radioButtonQ2 -> "2"
-                        R.id.radioButtonQ3 -> "3"
-                        R.id.radioButtonQ4 -> "4 or above"
-                        else -> ""
-                    }
-                    database.child("User").child(loginIc.toString()).child("survey").child("MealsConsumeDaily").setValue(selectedOption)
-                })
-                binding.radioGroupTest.clearCheck()
-            }
-//            3 -> {
-//                findNavController().navigate(R.id.action_fragment_survey_ques_to_fragment_survey_ques1)
-//            }
-        }
-
-    }
-
-}
\ No newline at end of file

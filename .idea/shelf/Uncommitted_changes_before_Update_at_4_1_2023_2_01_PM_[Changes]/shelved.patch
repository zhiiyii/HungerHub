Index: app/src/main/java/my/edu/tarc/hungerhub/ui/request/UserListCallback.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/hungerhub/ui/request/UserListCallback.kt b/app/src/main/java/my/edu/tarc/hungerhub/ui/request/MyCallback.kt
rename from app/src/main/java/my/edu/tarc/hungerhub/ui/request/UserListCallback.kt
rename to app/src/main/java/my/edu/tarc/hungerhub/ui/request/MyCallback.kt
--- a/app/src/main/java/my/edu/tarc/hungerhub/ui/request/UserListCallback.kt	(revision 3a5c079f46f45610b61dd238cecb4ed2d4217235)
+++ b/app/src/main/java/my/edu/tarc/hungerhub/ui/request/MyCallback.kt	(date 1672803669218)
@@ -1,5 +1,7 @@
 package my.edu.tarc.hungerhub.ui.request
 
-interface UserListCallback {
-    fun onCallback(value: List<String>)
+import my.edu.tarc.hungerhub.model.Request
+
+interface MyCallback {
+    fun onCallback(value: List<String>): Request
 }
\ No newline at end of file
Index: app/src/main/java/my/edu/tarc/hungerhub/ui/request/RequestFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package my.edu.tarc.hungerhub.ui.request\r\n\r\nimport android.annotation.SuppressLint\r\nimport android.app.AlertDialog\r\nimport android.content.Context\r\nimport android.icu.text.SimpleDateFormat\r\nimport android.os.Build\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.Toast\r\nimport androidx.annotation.RequiresApi\r\nimport androidx.core.view.isVisible\r\nimport androidx.fragment.app.Fragment\r\nimport androidx.fragment.app.viewModels\r\nimport androidx.navigation.fragment.findNavController\r\nimport com.google.android.material.snackbar.Snackbar\r\nimport com.google.firebase.database.DataSnapshot\r\nimport com.google.firebase.database.DatabaseError\r\nimport com.google.firebase.database.FirebaseDatabase\r\nimport com.google.firebase.database.ValueEventListener\r\nimport my.edu.tarc.hungerhub.R\r\nimport my.edu.tarc.hungerhub.databinding.FragmentRequestBinding\r\nimport my.edu.tarc.hungerhub.model.Request\r\nimport my.edu.tarc.hungerhub.model.RequestViewModel\r\nimport java.util.Calendar\r\n\r\nclass RequestFragment: Fragment() {\r\n\r\n    private var _binding: FragmentRequestBinding? = null\r\n    private val binding get() = _binding!!\r\n\r\n    private val requestViewModel: RequestViewModel by viewModels()\r\n    private lateinit var userListFromFirebase: List<String>\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?\r\n    ): View {\r\n        _binding = FragmentRequestBinding.inflate(inflater, container, false)\r\n        return binding.root\r\n    }\r\n\r\n    @SuppressLint(\"SimpleDateFormat\")\r\n    @RequiresApi(Build.VERSION_CODES.N)\r\n    override fun onStart() {\r\n        super.onStart()\r\n\r\n        // open and close TNC popup card view\r\n        binding.textViewTnc.setOnClickListener {\r\n            binding.cardViewTnc.isVisible = true\r\n        }\r\n        binding.imageButtonCloseTnc.setOnClickListener {\r\n            binding.cardViewTnc.isVisible = false\r\n        }\r\n        binding.buttonAgree.setOnClickListener {\r\n            binding.checkBoxTnc.isChecked = true\r\n            binding.cardViewTnc.isVisible = false\r\n        }\r\n\r\n        binding.buttonSubmit.setOnClickListener {\r\n            // check empty fields\r\n            if (binding.spinnerMarital.selectedItemPosition == 0) {\r\n                Snackbar.make(this.requireView(), getString(R.string.marital_required), Snackbar.LENGTH_SHORT).show()\r\n                return@setOnClickListener\r\n            }\r\n            if (binding.spinnerJob.selectedItemPosition == 0) {\r\n                Snackbar.make(this.requireView(), getString(R.string.job_required), Snackbar.LENGTH_SHORT).show()\r\n                return@setOnClickListener\r\n            }\r\n            if (binding.editTextIncome.text.toString().isEmpty()) {\r\n                binding.editTextIncome.error = getString(R.string.value_required)\r\n                return@setOnClickListener\r\n            }\r\n            if (binding.editTextReason.text.toString().isEmpty()) {\r\n                binding.editTextReason.error = getString(R.string.value_required)\r\n                return@setOnClickListener\r\n            }\r\n            if (binding.editTextPax.text.toString().isEmpty()) {\r\n                binding.editTextPax.error = getString(R.string.value_required)\r\n                return@setOnClickListener\r\n            }\r\n\r\n            // validate pax amount\r\n            if (binding.editTextPax.text.toString().toInt() > 10) {\r\n                binding.editTextPax.error = getString(R.string.invalid_pax)\r\n                return@setOnClickListener\r\n            }\r\n\r\n            // check agreement of TNC\r\n            if (!binding.checkBoxTnc.isChecked) {\r\n                Snackbar.make(this.requireView(), getString(R.string.tnc_required), Snackbar.LENGTH_SHORT).show()\r\n                return@setOnClickListener\r\n            }\r\n\r\n            // alert dialog to prompt confirmation\r\n            val builder = AlertDialog.Builder(this.requireContext())\r\n            builder.setTitle(R.string.dialog_title)\r\n            builder.setMessage(R.string.dialog_message)\r\n            builder.setIcon(R.drawable.alert)\r\n\r\n            // TODO: maybe 1 time a week?\r\n            // press submit in dialog\r\n            builder.setPositiveButton(R.string.submit) { _, _ ->\r\n                val referenceReq = FirebaseDatabase.getInstance().getReference(getString(R.string.firebase_req))\r\n\r\n                // get submit date and time\r\n                val dateFormat = \"yyyy/MM/dd HH:mm:ss\"\r\n                val calendar = Calendar.getInstance()\r\n                val format = SimpleDateFormat(dateFormat)\r\n                val time = format.format(calendar.time)\r\n\r\n                Log.d(\"hiii\", \"before read data\")\r\n\r\n                readData(object: UserListCallback {\r\n                    override fun onCallback(value: List<String>) {\r\n                        Log.d(\"hiii\", \"oncallback\")\r\n//                        val request = Request(\r\n//                            time, value[0], value[1], value[2],\r\n//                            value[3], value[4], value[5], value[6],\r\n//                            binding.editTextIncome.text.toString().toInt(),\r\n//                            binding.spinnerJob.selectedItem.toString(),\r\n//                            binding.spinnerMarital.selectedItem.toString(),\r\n//                            binding.editTextPax.text.toString().toInt(),\r\n//                            binding.editTextReason.text.toString(),\r\n//                            getString(R.string.pending)\r\n//                        )\r\n//\r\n//                        requestViewModel.insert(request)\r\n                    }\r\n                })\r\n\r\n                Log.d(\"hiii\", \"after read data\")\r\n\r\n//                val request = Request(\r\n//                    time,\r\n//                    value,\r\n//                    binding.editTextIncome.text.toString().toInt(),\r\n//                    binding.spinnerJob.selectedItem.toString(),\r\n//                    binding.spinnerMarital.selectedItem.toString(),\r\n//                    binding.editTextPax.text.toString().toInt(),\r\n//                    binding.editTextReason.text.toString(),\r\n//                    getString(R.string.pending)\r\n//                )\r\n\r\n                // save data in firebase and room database\r\n//                            referenceReq.child(time).setValue(request)\r\n//                requestViewModel.insert(request)\r\n\r\n                Snackbar.make(this.requireActivity().findViewById(R.id.constraintLayout_request),\r\n                    getString(R.string.form_submitted), Snackbar.LENGTH_SHORT).show()\r\n\r\n                findNavController().navigateUp()\r\n            }\r\n\r\n            // press cancel in dialog\r\n            builder.setNeutralButton(R.string.cancel) { _, _ ->\r\n                Toast.makeText(this.requireContext(), R.string.action_cancelled, Toast.LENGTH_SHORT).show()\r\n            }\r\n\r\n            val alertDialog: AlertDialog = builder.create()\r\n            alertDialog.setCancelable(false)\r\n            alertDialog.show()\r\n        }\r\n    }\r\n\r\n    private fun readData(myCallback: UserListCallback) {\r\n        val referenceUser = FirebaseDatabase.getInstance().getReference(getString(R.string.firebase_user))\r\n\r\n        val sharedPref = activity?.getSharedPreferences(\"Login\", Context.MODE_PRIVATE)\r\n        val loginIc = sharedPref?.getString(\"ic\", null)\r\n        val findUser = referenceUser.orderByChild(\"ic\").equalTo(loginIc)\r\n\r\n        findUser.addListenerForSingleValueEvent(object: ValueEventListener {\r\n            override fun onDataChange(dataSnapshot: DataSnapshot) {\r\n                if (dataSnapshot.exists() && loginIc != null) {\r\n                    val children = loginIc.let { it1 -> dataSnapshot.child(it1) }\r\n                    val name = children.child(\"name\").value.toString()\r\n                    val ic = children.child(\"ic\").value.toString()\r\n                    val email = children.child(\"email\").value.toString()\r\n                    val phoneNo = children.child(\"phoneNo\").value.toString()\r\n                    val address = children.child(\"address\").value.toString()\r\n                    val postcode = children.child(\"posCode\").value.toString()\r\n                    val state = children.child(\"state\").value.toString()\r\n                    userListFromFirebase = listOf(name, ic, phoneNo, email, address, postcode, state)\r\n                    Log.d(\"hiii\", \"list done\")\r\n                    myCallback.onCallback(userListFromFirebase)\r\n                }\r\n            }\r\n\r\n            override fun onCancelled(databaseError: DatabaseError) {\r\n                Log.e(\"firebase\", \"firebase error\")\r\n            }\r\n        })\r\n    }\r\n\r\n    override fun onDestroyView() {\r\n        super.onDestroyView()\r\n        _binding = null\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/hungerhub/ui/request/RequestFragment.kt b/app/src/main/java/my/edu/tarc/hungerhub/ui/request/RequestFragment.kt
--- a/app/src/main/java/my/edu/tarc/hungerhub/ui/request/RequestFragment.kt	(revision 3a5c079f46f45610b61dd238cecb4ed2d4217235)
+++ b/app/src/main/java/my/edu/tarc/hungerhub/ui/request/RequestFragment.kt	(date 1672806480200)
@@ -34,6 +34,8 @@
 
     private val requestViewModel: RequestViewModel by viewModels()
     private lateinit var userListFromFirebase: List<String>
+    private var request: Request =
+        Request("", "", "", "", "", "", "", "", 0, "", "", 0, "", "")
 
     override fun onCreateView(
         inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?
@@ -111,41 +113,34 @@
                 val format = SimpleDateFormat(dateFormat)
                 val time = format.format(calendar.time)
 
+                val income = binding.editTextIncome.text.toString().toInt()
+                val job = binding.spinnerJob.selectedItem.toString()
+                val marital = binding.spinnerMarital.selectedItem.toString()
+                val pax = binding.editTextPax.text.toString().toInt()
+                val reason = binding.editTextReason.text.toString()
+                val pending = getString(R.string.pending)
+
                 Log.d("hiii", "before read data")
 
-                readData(object: UserListCallback {
-                    override fun onCallback(value: List<String>) {
+                readData(object: MyCallback {
+                    override fun onCallback(value: List<String>): Request {
                         Log.d("hiii", "oncallback")
-//                        val request = Request(
-//                            time, value[0], value[1], value[2],
-//                            value[3], value[4], value[5], value[6],
-//                            binding.editTextIncome.text.toString().toInt(),
-//                            binding.spinnerJob.selectedItem.toString(),
-//                            binding.spinnerMarital.selectedItem.toString(),
-//                            binding.editTextPax.text.toString().toInt(),
-//                            binding.editTextReason.text.toString(),
-//                            getString(R.string.pending)
-//                        )
-//
-//                        requestViewModel.insert(request)
+                        request = Request(
+                            time, value[0], value[1], value[2],
+                            value[3], value[4], value[5], value[6],
+                            income, job, marital, pax, reason, pending
+                        )
+                        Log.d("request", request.name)
+                        Log.d("request", request.maritalStatus)
+                        return request
                     }
                 })
 
-                Log.d("hiii", "after read data")
-
-//                val request = Request(
-//                    time,
-//                    value,
-//                    binding.editTextIncome.text.toString().toInt(),
-//                    binding.spinnerJob.selectedItem.toString(),
-//                    binding.spinnerMarital.selectedItem.toString(),
-//                    binding.editTextPax.text.toString().toInt(),
-//                    binding.editTextReason.text.toString(),
-//                    getString(R.string.pending)
-//                )
+                Log.d("request2", request.name)
+                requestViewModel.insert(request)
 
                 // save data in firebase and room database
-//                            referenceReq.child(time).setValue(request)
+//                referenceReq.child(time).setValue(request)
 //                requestViewModel.insert(request)
 
                 Snackbar.make(this.requireActivity().findViewById(R.id.constraintLayout_request),
@@ -165,7 +160,7 @@
         }
     }
 
-    private fun readData(myCallback: UserListCallback) {
+    private fun readData(myCallback: MyCallback) {
         val referenceUser = FirebaseDatabase.getInstance().getReference(getString(R.string.firebase_user))
 
         val sharedPref = activity?.getSharedPreferences("Login", Context.MODE_PRIVATE)
@@ -174,7 +169,9 @@
 
         findUser.addListenerForSingleValueEvent(object: ValueEventListener {
             override fun onDataChange(dataSnapshot: DataSnapshot) {
+                Log.d("hiii", "in readdata")
                 if (dataSnapshot.exists() && loginIc != null) {
+                    Log.d("hiii", "got snapshot")
                     val children = loginIc.let { it1 -> dataSnapshot.child(it1) }
                     val name = children.child("name").value.toString()
                     val ic = children.child("ic").value.toString()
@@ -185,7 +182,14 @@
                     val state = children.child("state").value.toString()
                     userListFromFirebase = listOf(name, ic, phoneNo, email, address, postcode, state)
                     Log.d("hiii", "list done")
-                    myCallback.onCallback(userListFromFirebase)
+                    request = myCallback.onCallback(userListFromFirebase)
+                    //requestViewModel.insert(request) // bug
+                } else if (dataSnapshot.exists()) {
+                    Log.d("hiii", "no ic")
+                } else if (loginIc != null) {
+                    Log.d("hiii", "no snapshot")
+                } else {
+                    Log.d("hiii", "gg")
                 }
             }
 
Index: app/src/main/java/my/edu/tarc/hungerhub/ui/survey/fragment_survey_ques1.kt
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/hungerhub/ui/survey/fragment_survey_ques1.kt b/app/src/main/java/my/edu/tarc/hungerhub/ui/survey/fragment_survey_ques1.kt
deleted file mode 100644
--- a/app/src/main/java/my/edu/tarc/hungerhub/ui/survey/fragment_survey_ques1.kt	(revision 3a5c079f46f45610b61dd238cecb4ed2d4217235)
+++ /dev/null	(revision 3a5c079f46f45610b61dd238cecb4ed2d4217235)
@@ -1,115 +0,0 @@
-package my.edu.tarc.hungerhub.ui.survey
-
-import android.app.AlertDialog
-import android.os.Bundle
-import androidx.fragment.app.Fragment
-import android.view.LayoutInflater
-import android.view.View
-import android.view.ViewGroup
-import android.widget.RadioGroup
-import androidx.navigation.fragment.findNavController
-import com.google.firebase.auth.FirebaseAuth
-import com.google.firebase.auth.FirebaseUser
-import com.google.firebase.database.FirebaseDatabase
-import my.edu.tarc.hungerhub.R
-import my.edu.tarc.hungerhub.databinding.FragmentSurveyQues1Binding
-import my.edu.tarc.hungerhub.databinding.FragmentSurveyQuesBinding
-
-class fragment_survey_ques1 : Fragment() {
-    private var _binding: FragmentSurveyQues1Binding? = null
-    private val binding get() = _binding!!
-
-    var mAuth: FirebaseAuth? = FirebaseAuth.getInstance()
-    var currentUser: FirebaseUser? = mAuth?.getCurrentUser()
-
-    var database = FirebaseDatabase.getInstance().reference
-    var dataRef = database.child("survey").child(currentUser.toString()).child("data")
-
-    override fun onCreateView(
-        inflater: LayoutInflater,
-        container: ViewGroup?,
-        savedInstanceState: Bundle?
-    ): View? {
-        _binding = FragmentSurveyQues1Binding.inflate(inflater, container, false)
-        return binding.root
-    }
-
-    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
-        super.onViewCreated(view, savedInstanceState)
-
-        var index = 0
-        val arrQuestion = arrayOf<String>(
-            "Is your family income able to cover daily food expenses",
-            "Do you think the food price in your area is reasonable/affordable?"
-        )
-        val arrAnswerA = arrayOf("Yes", "Yes")
-        val arrAnswerB = arrayOf("No", "No")
-
-        binding.textViewQues1.text = String.format(arrQuestion.get(index))
-        binding.radioButtonQQ1.text = String.format(arrAnswerA.get(index))
-        binding.radioButtonQQ2.text = String.format(arrAnswerB.get(index))
-
-        if (index == 0) {
-            binding.radioGroupQues2.setOnCheckedChangeListener(RadioGroup.OnCheckedChangeListener { group, checkedId ->
-                val selectedOption = when (checkedId) {
-                    R.id.radioButtonQQ1 -> "Yes"
-                    R.id.radioButtonQQ2 -> "No"
-                    else -> ""
-                }
-
-
-                // Store the selected option in the Firebase Realtime Database
-                dataRef.child("FamilyIncomeAbleToCoverDailyFoodExpenses").setValue(selectedOption)
-                //dataRef.setValue(selectedOption)
-
-            })
-            index++
-
-        }
-        binding.buttonNextSurvey.setOnClickListener {
-            val member1 = binding.radioButtonQQ1.isChecked
-            val member2 = binding.radioButtonQQ2.isChecked
-
-            if((!member1)&&(!member2)){
-                // Show error message using alert dialog
-                val errorMessage = getString(R.string.value_required)
-                val builder = AlertDialog.Builder(requireActivity())
-                builder.setTitle("Error")
-                    .setMessage(errorMessage)
-                    .setPositiveButton("OK", null)
-                val alertDialog = builder.create()
-                alertDialog.show()
-
-                return@setOnClickListener
-            }
-            if (index <= arrQuestion.size - 1) {
-                binding.textViewQues1.text = String.format(arrQuestion.get(index))
-                binding.radioButtonQQ1.text = String.format(arrAnswerA.get(index))
-                binding.radioButtonQQ2.text = String.format(arrAnswerB.get(index))
-                check(index)
-                index++
-            } else {
-                findNavController().navigate(R.id.action_fragment_survey_ques1_to_surveyFragmentRate1)
-            }
-        }
-    }
-
-    private fun check(index: Int) {
-
-        if (index == 1) {
-            binding.radioGroupQues2.setOnCheckedChangeListener(RadioGroup.OnCheckedChangeListener { group, checkedId ->
-                val selectedOption = when (checkedId) {
-                    R.id.radioButtonQQ1 -> "Yes"
-                    R.id.radioButtonQQ2 -> "No"
-                    else -> ""
-                }
-
-                // Store the selected option in the Firebase Realtime Database
-                dataRef.child("FoodPriceReasonable").setValue(selectedOption)
-                //dataRef.setValue(selectedOption)
-
-            })
-            binding.radioGroupQues2.clearCheck()
-        }
-    }
-}
\ No newline at end of file
Index: app/src/main/java/my/edu/tarc/hungerhub/ui/survey/Fragment_survey_ques.kt
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/hungerhub/ui/survey/Fragment_survey_ques.kt b/app/src/main/java/my/edu/tarc/hungerhub/ui/survey/Fragment_survey_ques.kt
deleted file mode 100644
--- a/app/src/main/java/my/edu/tarc/hungerhub/ui/survey/Fragment_survey_ques.kt	(revision 3a5c079f46f45610b61dd238cecb4ed2d4217235)
+++ /dev/null	(revision 3a5c079f46f45610b61dd238cecb4ed2d4217235)
@@ -1,152 +0,0 @@
-package my.edu.tarc.hungerhub.ui.survey
-
-import android.app.AlertDialog
-import android.os.Bundle
-import androidx.fragment.app.Fragment
-import android.view.LayoutInflater
-import android.view.View
-import android.view.ViewGroup
-import android.widget.RadioGroup
-import androidx.navigation.fragment.findNavController
-import com.google.firebase.auth.FirebaseAuth
-import com.google.firebase.auth.FirebaseUser
-import com.google.firebase.database.FirebaseDatabase
-import my.edu.tarc.hungerhub.R
-import my.edu.tarc.hungerhub.databinding.FragmentSurveyBinding
-import my.edu.tarc.hungerhub.databinding.FragmentSurveyQuesBinding
-
-class fragment_survey_ques : Fragment() {
-
-    private var _binding: FragmentSurveyQuesBinding? = null
-    private val binding get() = _binding!!
-
-    var mAuth: FirebaseAuth? = FirebaseAuth.getInstance()
-    var currentUser: FirebaseUser? = mAuth?.getCurrentUser()
-
-    var database = FirebaseDatabase.getInstance().reference
-    var dataRef = database.child("survey").child(currentUser.toString()).child("data")
-
-    override fun onCreateView(
-        inflater: LayoutInflater,
-        container: ViewGroup?,
-        savedInstanceState: Bundle?
-    ): View? {
-        _binding = FragmentSurveyQuesBinding.inflate(inflater, container, false)
-        return binding.root
-    }
-
-    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
-        super.onViewCreated(view, savedInstanceState)
-        var index = 0
-        val arrQuestion = arrayOf<String>(
-            "How many members are there in your household",
-            "How many members are working currently in your household",
-            "How many meals do you and your family consume daily"
-        )
-        val arrAnswerA = arrayOf("1-3", "1-3", "1")
-        val arrAnswerB = arrayOf("4-6", "4-6", "2")
-        val arrAnswerC = arrayOf("7-9", "7-9", "3")
-        val arrAnswerD = arrayOf("10 or above", "10 or above", "4 or above")
-
-        binding.textViewQues.text = String.format(arrQuestion.get(index))
-        binding.radioButtonQ1.text = String.format(arrAnswerA.get(index))
-        binding.radioButtonQ2.text = String.format(arrAnswerB.get(index))
-        binding.radioButtonQ3.text = String.format(arrAnswerC.get(index))
-        binding.radioButtonQ4.text = String.format(arrAnswerD.get(index))
-        if(index==0) {
-            binding.radioGroupTest.setOnCheckedChangeListener(RadioGroup.OnCheckedChangeListener { group, checkedId ->
-                val selectedOption = when (checkedId) {
-                R.id.radioButtonQ1 -> "1-3"
-                R.id.radioButtonQ2 -> "4-6"
-                R.id.radioButtonQ3 -> "7-9"
-                R.id.radioButtonQ4 -> "10 or above"
-                else -> ""
-            }
-
-            // Store the selected option in the Firebase Realtime Database
-         dataRef.child("NumMemberInHouse").setValue(selectedOption)
-            //dataRef.setValue(selectedOption)
-
-        })
-        index++
-        }
-
-        binding.buttonNextQues.setOnClickListener {
-            val member1 = binding.radioButtonQ1.isChecked
-            val member2 = binding.radioButtonQ2.isChecked
-            val member3 = binding.radioButtonQ3.isChecked
-            val member4 = binding.radioButtonQ4.isChecked
-
-            if((!member1)&&(!member2)&&(!member3)&&(!member4)){
-                // Show error message using alert dialog
-                val errorMessage = getString(R.string.value_required)
-                val builder = AlertDialog.Builder(requireActivity())
-                builder.setTitle("Error")
-                    .setMessage(errorMessage)
-                    .setPositiveButton("OK", null)
-                val alertDialog = builder.create()
-                alertDialog.show()
-
-                return@setOnClickListener
-            }
-            //binding.radioGroupTest.clearCheck()
-            if (index<=arrQuestion.size-1) {
-
-                binding.textViewQues.text = String.format(arrQuestion.get(index))
-                binding.radioButtonQ1.text = String.format(arrAnswerA.get(index))
-                binding.radioButtonQ2.text = String.format(arrAnswerB.get(index))
-                binding.radioButtonQ3.text = String.format(arrAnswerC.get(index))
-                binding.radioButtonQ4.text = String.format(arrAnswerD.get(index))
-                check(index)
-                index++
-
-            }
-
-            else{
-                findNavController().navigate(R.id.action_fragment_survey_ques_to_fragment_survey_ques1)
-
-            }
-        }
-    }
-
-    private fun check(index: Int) {
-
-        when (index) {
-            1 -> {
-                binding.radioGroupTest.setOnCheckedChangeListener(RadioGroup.OnCheckedChangeListener { group, checkedId ->
-                    val selectedOption = when (checkedId) {
-                        R.id.radioButtonQ1 -> "1-3"
-                        R.id.radioButtonQ2 -> "4-6"
-                        R.id.radioButtonQ3 -> "7-9"
-                        R.id.radioButtonQ4 -> "10 or above"
-                        else -> ""
-                    }
-
-                    // Store the selected option in the Firebase Realtime Database
-                    dataRef.child("MembersWorking").setValue(selectedOption)
-
-                })
-
-                binding.radioGroupTest.clearCheck()
-            }
-            2 -> {
-                binding.radioGroupTest.setOnCheckedChangeListener(RadioGroup.OnCheckedChangeListener { group, checkedId ->
-                    val selectedOption = when (checkedId) {
-                        R.id.radioButtonQ1 -> "1"
-                        R.id.radioButtonQ2 -> "2"
-                        R.id.radioButtonQ3 -> "3"
-                        R.id.radioButtonQ4 -> "4 or above"
-                        else -> ""
-                    }
-                    dataRef.child("MealsConsumeDaily").setValue(selectedOption)
-                })
-                binding.radioGroupTest.clearCheck()
-            }
-//            3 -> {
-//                findNavController().navigate(R.id.action_fragment_survey_ques_to_fragment_survey_ques1)
-//            }
-        }
-
-    }
-
-}
\ No newline at end of file
Index: app/src/main/java/my/edu/tarc/hungerhub/ui/home/User.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package my.edu.tarc.hungerhub.ui.home\r\n\r\nimport android.widget.RadioGroup\r\n\r\ndata class User(\r\n    val ic: String? = null,\r\n    val email: String? = null,\r\n    val name: String? = null,\r\n    val state: String? = null,\r\n    val pass: String? = null,\r\n    val phoneNo: String? = null,\r\n    val address: String,\r\n    val posCode: String,\r\n    val RorD: RadioGroup\r\n    )\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/hungerhub/ui/home/User.kt b/app/src/main/java/my/edu/tarc/hungerhub/ui/home/User.kt
--- a/app/src/main/java/my/edu/tarc/hungerhub/ui/home/User.kt	(revision 3a5c079f46f45610b61dd238cecb4ed2d4217235)
+++ b/app/src/main/java/my/edu/tarc/hungerhub/ui/home/User.kt	(date 1672798446301)
@@ -12,5 +12,4 @@
     val address: String,
     val posCode: String,
     val RorD: RadioGroup
-    )
-
+)
